import requests
import argparse
import dns.resolver
from dns.exception import DNSException
import threading
import colorama

def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-m', dest='mode', help='dir or dns')
    parser.add_argument('-u', dest='url', help='url address')
    parser.add_argument('-w', dest='wordlist', help='wordlist')
    options = parser.parse_args()

    if not options.mode:
        parser.error('[-] Please specify a mode, use --help for more info')

    if not options.url:
        parser.error('[-] Please specify a url in the arguments, use --help for more info')
    
    if not options.wordlist:
        parser.error('[-] Please specify a wordlist, use --help for more info')

    return options


def get_words(wordlist):
    wordlist_file = open(wordlist).read()
    wordlist = wordlist_file.splitlines()
    return wordlist

def scan_dirs(url, words):
    if "http" not in url:
        print("[-] Enter valid URL")

    for dir in words:
        check_url = f"{url}/{dir}"

        req = requests.get(check_url)

        if req.status_code != 404:
            print(f'[+] Directory found: {check_url}')

def scan_dns(url, words):
    if "http://" in url:
        new_url = url.replace("http://", "")
    
    elif "https://" in url:
        new_url = url.replace("https://", "")

    for subdomain in words:
        check_url = f"{subdomain}.{new_url}"

        try:
            dns.resolver.resolve(check_url)
        except DNSException:
            continue
        else:
            print(f'[+] Subdomain found: {check_url}')

def main():
    command_args = get_args()
    words = get_words(command_args.wordlist)
    
    if command_args.mode == "dir":
        print("DIRECTORY MODE")
        print("SCANNING......")
        threading.Thread(target=scan_dirs, args=(command_args.url, words, )).start()

    elif command_args.mode == "dns":
        print("SUBDOMAIN MODE")
        print("SCANNING......")
        threading.Thread(target=scan_dns, args=(command_args.url, words, )).start()

    else:
        print("[-] Wrong mode, use --help for more info")
        quit()

main()